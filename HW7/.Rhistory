new.pred <- sample(train[,i], replace=F)
temp <- train
temp[,c(i)] <- new.pred
colnames(temp) <- c("y","X1","X2","X3","X4","X5","X6","X7","X8","X9","X10")
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[i] <- mean(temp.rf.pred-test$y)^2
}
set.seed(4)
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
for(i in 1:ncol(train)-1){
new.pred <- sample(train[,i], replace=F)
temp <- train
temp[,i] <- new.pred
colnames(temp) <- c("y","X1","X2","X3","X4","X5","X6","X7","X8","X9","X10")
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[i] <- mean(temp.rf.pred-test$y)^2
}
set.seed(4)
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
for(i in 1:ncol(train)-1){
new.pred <- sample(train[,i], replace=F)
temp <- train
temp[,i] <- new.pred
colnames(temp) <- c("y","X1","X2","X3","X4","X5","X6","X7","X8","X9","X10")
#rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
#temp.rf.pred <- predict(rf.temp, test)
#mse.perm[i] <- mean(temp.rf.pred-test$y)^2
}
set.seed(4)
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
for(i in 1:ncol(train)-1){
new.pred <- sample(train[,i], replace=F)
temp <- train
#temp[,i] <- new.pred
colnames(temp) <- c("y","X1","X2","X3","X4","X5","X6","X7","X8","X9","X10")
#rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
#temp.rf.pred <- predict(rf.temp, test)
#mse.perm[i] <- mean(temp.rf.pred-test$y)^2
}
set.seed(4)
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
for(i in 1:ncol(train)-1){
paste(i)
new.pred <- sample(train[,i], replace=F)
temp <- train
#temp[,i] <- new.pred
colnames(temp) <- c("y","X1","X2","X3","X4","X5","X6","X7","X8","X9","X10")
#rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
#temp.rf.pred <- predict(rf.temp, test)
#mse.perm[i] <- mean(temp.rf.pred-test$y)^2
}
set.seed(4)
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
for(i in 1:ncol(train)-1){
paste(i)
new.pred <- sample(train[,i], replace=F)
temp <- train
#temp[,i] <- new.pred
colnames(temp) <- c("y","X1","X2","X3","X4","X5","X6","X7","X8","X9","X10")
#rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
#temp.rf.pred <- predict(rf.temp, test)
#mse.perm[i] <- mean(temp.rf.pred-test$y)^2
}
set.seed(4)
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
for(i in 1:ncol(train)-1){
cat(i)
new.pred <- sample(train[,i], replace=F)
temp <- train
#temp[,i] <- new.pred
colnames(temp) <- c("y","X1","X2","X3","X4","X5","X6","X7","X8","X9","X10")
#rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
#temp.rf.pred <- predict(rf.temp, test)
#mse.perm[i] <- mean(temp.rf.pred-test$y)^2
}
set.seed(4)
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
for(i in 1:ncol(train)-1){
new.pred <- sample(train[,i], replace=F)
temp <- train
cat(dim(temp))
#temp[,i] <- new.pred
colnames(temp) <- c("y","X1","X2","X3","X4","X5","X6","X7","X8","X9","X10")
#rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
#temp.rf.pred <- predict(rf.temp, test)
#mse.perm[i] <- mean(temp.rf.pred-test$y)^2
}
set.seed(4)
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
for(i in 1:ncol(train)-1){
new.pred <- sample(train[,i], replace=F)
temp <- train
temp[,i] <- new.pred
cat(dim(temp))
colnames(temp) <- c("y","X1","X2","X3","X4","X5","X6","X7","X8","X9","X10")
#rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
#temp.rf.pred <- predict(rf.temp, test)
#mse.perm[i] <- mean(temp.rf.pred-test$y)^2
}
set.seed(4)
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
for(i in 1:ncol(train)-1){
new.pred <- sample(train[,i], replace=F)
temp <- train
temp <- data.frame(train, new.pred)
temp <- temp[,-i]
colnames(temp) <- c("y","X1","X2","X3","X4","X5","X6","X7","X8","X9","X10")
#rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
#temp.rf.pred <- predict(rf.temp, test)
#mse.perm[i] <- mean(temp.rf.pred-test$y)^2
}
set.seed(4)
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
fuckthisshit <- train
for(i in 1:ncol(train)-1){
train[,i] <- sample(train[,i], replace=F)
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[i] <- mean(temp.rf.pred-test$y)^2
}
View(train)
set.seed(4)
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
fuckthisshit <- train
for(i in 1:ncol(train)-1){
new.pred <- sample(train[,i], replace=F)
fuckthisshit <- fuckthisshit[,-i]
fuckthisshit <- data.frame(fuckthisshit, new.pred)
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[i] <- mean(temp.rf.pred-test$y)^2
}
set.seed(4)
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
fuckthisshit <- train
for(i in 1:ncol(train)-1){
new.pred <- sample(train[,i], replace=F)
fuckthisshit <- fuckthisshit[,-i]
#fuckthisshit <- data.frame(fuckthisshit, new.pred)
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[i] <- mean(temp.rf.pred-test$y)^2
}
set.seed(4)
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
fuckthisshit <- train
for(i in 1:ncol(train)-1){
new.pred <- sample(train[,i], replace=F)
fuckthisshit <- fuckthisshit[,-c(i)]
#fuckthisshit <- data.frame(fuckthisshit, new.pred)
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[i] <- mean(temp.rf.pred-test$y)^2
}
set.seed(4)
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
fuckthisshit <- train
numbers <- c(1:10)
for(i in 1:ncol(train)-1){
new.pred <- sample(train[,i], replace=F)
fuckthisshit <- fuckthisshit[,-numbers[i]]
#fuckthisshit <- data.frame(fuckthisshit, new.pred)
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[i] <- mean(temp.rf.pred-test$y)^2
}
# READ ME:
set.seed(4)
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
new.pred <- sample(train[,2],replace=F)
temp <- train
temp[,2] <- new.pred
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[i] <- mean(temp.rf.pred-test$y)^2
View(temp)
set.seed(4)
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
new.pred <- sample(train[,3],replace=F)
temp <- train
temp[,3] <- new.pred
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[2] <- mean(temp.rf.pred-test$y)^2
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
new.pred <- sample(train[,4],replace=F)
temp <- train
temp[,4] <- new.pred
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[3] <- mean(temp.rf.pred-test$y)^2
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
new.pred <- sample(train[,5],replace=F)
temp <- train
temp[,5] <- new.pred
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[4] <- mean(temp.rf.pred-test$y)^2
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
new.pred <- sample(train[,6],replace=F)
temp <- train
temp[,6] <- new.pred
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[5] <- mean(temp.rf.pred-test$y)^2
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
new.pred <- sample(train[,7],replace=F)
temp <- train
temp[,7] <- new.pred
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[6] <- mean(temp.rf.pred-test$y)^2
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
new.pred <- sample(train[,8],replace=F)
temp <- train
temp[,8] <- new.pred
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[7] <- mean(temp.rf.pred-test$y)^2
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
new.pred <- sample(train[,9],replace=F)
temp <- train
temp[,9] <- new.pred
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[8] <- mean(temp.rf.pred-test$y)^2
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
new.pred <- sample(train[,10],replace=F)
temp <- train
temp[,10] <- new.pred
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[9] <- mean(temp.rf.pred-test$y)^2
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
new.pred <- sample(train[,11],replace=F)
temp <- train
temp[,11] <- new.pred
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[10] <- mean(temp.rf.pred-test$y)^2
plot(mse.perm,type="b",axes=F,ann=F,ylim=c(0,max(mse.perm)+1))
axis(1,at=1:10,lab=names(df.train)[-1])
axis(2,at=seq(0,max(mse.perm)+1,0.25),las=1)
box()
mse.perm
# READ ME:
set.seed(4)
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
new.pred <- sample(train[,2], 900, replace=F)
temp <- train
temp[,2] <- new.pred
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[1] <- mean(temp.rf.pred-test$y)^2
set.seed(42)
df.train <- read.csv("HW7train.csv", header=T)
split.loc <- sample(1:1000, 900, replace=F)
train <- df.train[split.loc,]
test <- df.train[-split.loc,]
set.seed(15)
rf <- randomForest(y~., train, mtry=round(sqrt(ncol(train)-1)), importance=T)
importance(rf)
par(mfrow=c(3,1))
plot(rf$importance[,1],type="b",axes=F,ann=F,ylim=c(0,max(rf$importance[,1])+1))
axis(1,at=1:10,lab=names(df.train)[-1])
axis(2,at=seq(0,max(rf$importance)+1,0.25),las=1)
box()
# READ ME:
set.seed(4)
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
new.pred <- sample(train[,2], 900, replace=F)
temp <- train
temp[,2] <- new.pred
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[1] <- mean(temp.rf.pred-test$y)^2
set.seed(4)
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
new.pred <- sample(train[,3],900,replace=F)
temp <- train
temp[,3] <- new.pred
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[2] <- mean(temp.rf.pred-test$y)^2
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
new.pred <- sample(train[,4],900,replace=F)
temp <- train
temp[,4] <- new.pred
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[3] <- mean(temp.rf.pred-test$y)^2
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
new.pred <- sample(train[,5],900,replace=F)
temp <- train
temp[,5] <- new.pred
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[4] <- mean(temp.rf.pred-test$y)^2
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
new.pred <- sample(train[,6],900,replace=F)
temp <- train
temp[,6] <- new.pred
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[5] <- mean(temp.rf.pred-test$y)^2
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
new.pred <- sample(train[,7],900,replace=F)
temp <- train
temp[,7] <- new.pred
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[6] <- mean(temp.rf.pred-test$y)^2
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
new.pred <- sample(train[,8],900,replace=F)
temp <- train
temp[,8] <- new.pred
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[7] <- mean(temp.rf.pred-test$y)^2
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
new.pred <- sample(train[,9],900,replace=F)
temp <- train
temp[,9] <- new.pred
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[8] <- mean(temp.rf.pred-test$y)^2
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
new.pred <- sample(train[,10],900,replace=F)
temp <- train
temp[,10] <- new.pred
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[9] <- mean(temp.rf.pred-test$y)^2
mse.perm <- vector(mode="numeric",length = ncol(train)-1)
new.pred <- sample(train[,11],900,replace=F)
temp <- train
temp[,11] <- new.pred
rf.temp <- randomForest(y~.,data=temp,mtry=round(sqrt(ncol(temp)-1)), importance=T)
temp.rf.pred <- predict(rf.temp, test)
mse.perm[10] <- mean(temp.rf.pred-test$y)^2
plot(mse.perm,type="b",axes=F,ann=F,ylim=c(0,max(mse.perm)+1))
axis(1,at=1:10,lab=names(df.train)[-1])
axis(2,at=seq(0,max(mse.perm)+1,0.25),las=1)
box()
set.seed(4)
mse.loo <- vector(mode="numeric",length = ncol(train)-1)
for(i in 1:ncol(train)-1){
tempp <- train[,-c(i)]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[i] <- mean(rf.tempp.pred-test$y)^2
}
tempp <- train[,-i]
train[,-2]
dim(tempp)
dim(train)
tempp <- train[,-c(2)]
dim(tempp)
set.seed(4)
mse.loo <- vector(mode="numeric",length = ncol(train)-1)
for(i in 1:ncol(train)-1){
tempp <- train[,-c(i)]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[i] <- mean(rf.tempp.pred-test$y)^2
}
set.seed(4)
mse.loo <- vector(mode="numeric",length = ncol(train)-1)
for(i in 1:ncol(train)-1){
tempp <- train
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[i] <- mean(rf.tempp.pred-test$y)^2
}
set.seed(4)
mse.loo <- vector(mode="numeric",length = ncol(train)-1)
numbers <- c(1:10)
for(i in 1:ncol(train)-1){
tempp <- train[,numbers[-i]]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[i] <- mean(rf.tempp.pred-test$y)^2
}
set.seed(4)
mse.loo <- vector(mode="numeric",length = ncol(train)-1)
numbers <- c(1:10)
for(i in 1:ncol(train)-1){
tempp <- train
tempp <- tempp[,-i]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[i] <- mean(rf.tempp.pred-test$y)^2
}
#Same thing as above
set.seed(4)
mse.loo <- vector(mode="numeric",length = ncol(train)-1)
tempp <- train[,-2]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[1] <- mean(rf.tempp.pred-test$y)^2
tempp <- train[,-3]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[2] <- mean(rf.tempp.pred-test$y)^2
tempp <- train[,-4]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[3] <- mean(rf.tempp.pred-test$y)^2
tempp <- train[,-5]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[4] <- mean(rf.tempp.pred-test$y)^2
tempp <- train[,-6]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[5] <- mean(rf.tempp.pred-test$y)^2
tempp <- train[,-7]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[6] <- mean(rf.tempp.pred-test$y)^2
tempp <- train[,-8]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[7] <- mean(rf.tempp.pred-test$y)^2
tempp <- train[,-9]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[8] <- mean(rf.tempp.pred-test$y)^2
tempp <- train[,-10]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[9] <- mean(rf.tempp.pred-test$y)^2
tempp <- train[,-11]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[10] <- mean(rf.tempp.pred-test$y)^2
plot(mse.loo,type="b",axes=F,ann=F,ylim=c(0,max(mse.loo)+1))
axis(1,at=1:10,lab=names(df.train)[-1])
axis(2,at=seq(0,max(mse.loo)+1,0.25),las=1)
box()
importance(rf)
#Same thing as above
mse.loo <- vector(mode="numeric",length = ncol(train)-1)
tempp <- train[,-2]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[1] <- mean(rf.tempp.pred-test$y)^2
tempp <- train[,-3]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[2] <- mean(rf.tempp.pred-test$y)^2
tempp <- train[,-4]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[3] <- mean(rf.tempp.pred-test$y)^2
tempp <- train[,-5]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[4] <- mean(rf.tempp.pred-test$y)^2
tempp <- train[,-6]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[5] <- mean(rf.tempp.pred-test$y)^2
tempp <- train[,-7]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[6] <- mean(rf.tempp.pred-test$y)^2
tempp <- train[,-8]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[7] <- mean(rf.tempp.pred-test$y)^2
tempp <- train[,-9]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[8] <- mean(rf.tempp.pred-test$y)^2
tempp <- train[,-10]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[9] <- mean(rf.tempp.pred-test$y)^2
tempp <- train[,-11]
rf.tempp <- randomForest(y~.,data=tempp, mtry=round(sqrt(ncol(train)-1)), importance=T)
rf.tempp.pred <- predict(rf.tempp, test)
mse.loo[10] <- mean(rf.tempp.pred-test$y)^2
plot(mse.loo,type="b",axes=F,ann=F,ylim=c(0,max(mse.loo)+1))
axis(1,at=1:10,lab=names(df.train)[-1])
axis(2,at=seq(0,max(mse.loo)+1,0.25),las=1)
box()
for(i in 2:11){}
for(i in 2:11){
cat(sum(train[,i] < 0)
}
for(i in 2:11){
cat(sum(train[,i] < 0))
}
set.seed(42)
df.train <- read.csv("HW7train.csv", header=T)
split.loc <- sample(1:1000, 900, replace=F)
train <- df.train[split.loc,]
test <- df.train[-split.loc,]
set.seed(15)
rf <- randomForest(y~., train, mtry=round(sqrt(ncol(train)-1)), importance=T)
importance(rf)
par(mfrow=c(3,1))
plot(rf$importance[,1],type="b",axes=F,ann=F,ylim=c(0,max(rf$importance[,1])+1))
axis(1,at=1:10,lab=names(df.train)[-1])
axis(2,at=seq(0,max(rf$importance)+1,0.25),las=1)
box()
View(train)
pairs(train)
pairs(train[,2:11])
