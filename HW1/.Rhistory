election.df$predicted <- predict(election.model)
plot(election.df$predicted, election.df$residuals, pch = 20, xlab = "Predicted Value", ylab = "Residual", main = "Predicted Value vs Residuals")
abline(a=0,b=0)
election.df <- read.table("election.csv", sep = ",", header = T)
plot(election.df$growth, election.df$vote_pct, pch = 20, xlab = "GDP Growth (%)", ylab = "Vote Percentage")
election.model <- lm(data = election.df, vote_pct ~ growth)
summary(election.model)
election.df$residuals <- residuals(election.model)
hist(election.df$residuals, xlab="Residuals", main="Hisogram of Incumbent Vote % - Residuals")
election.df$predicted <- predict(election.model)
plot(election.df$predicted, election.df$residuals, pch = 20, xlab = "Predicted Value", ylab = "Residual", main = "Predicted Value vs Residuals")
abline(a=0,b=0)
election.model$coefficients
View(election.df)
myY <- election.df$vote_pct - election.df$predicted
myY <- myY^2
dim(myY)
length(myY)
sum(myY)
sum(myY) / 22
sqrt(20.56675)
?hist
View(election.df)
hwtest <- rbind(election.df[,1:3], data.frame(2024, 12, 50))
tenp <- data.frame(2024, 12, 50)
colnames(temp) <- c("year", "growth", "vote_pct")
colnames(tenp) <- c("year", "growth", "vote_pct")
hwtest <- rbind(election.df[,1:3], tenp)
View(hwtest)
lm(data = hwtest, vote_pct ~ growth)
ssx <- hwtest$growth - mean(hwtest$growth)
ssy <- hwtest$vote_pct - mean(hwtest$vote_pct)
sum(ssx) + sum(ssy)
ssx
sum(ssx)
sum(ssy)
ssx * ssy
sum(ssx*ssy) / 24
ssx <- ssx^2
ssy <- ssy^2
sqrt(ssx/24)
ssx <- sum(ssx)
ssy <- sum(ssy)
sx <- sqrt(ssx/24)
sy <- sqrt(ssy/24)
16.51145/(sx*sy)
lm(data = hwtest, vote_pct ~ growth)
summary(lm(data = hwtest, vote_pct ~ growth))
sqrt(0.3354)
sqrt(0.4225)
sxm <- hwtest$growth - mean(hwtest$growth)
sym <- hwtest$vote_pct - mean(hwtest$vote_pct)
sxym <- sxm * sym
sum(sxym)
sum(sxym)/sum(sxm^2)
plot(hwtest$gor)
plot(hwtest$growth, hwtest$vote_pct, pch = 20)
abline(lm(data = hwtest, vote_pct ~ growth))
install.packages("ISLR2")
setwd("~/Desktop/Pitt 2022-2024/Spring2023 Materials/STAT1361/HW1")
list.files(pattern = ".csv")
ls()
rse <- function(df){}
rse <- function(df){}
rse <- function(df)
d
yi <- hwtest$vote_pct
head(hwtest)
hwtest$predicted <- predict(lm(data=hwtest, vote_pct~growth))
hwtest$predicted
summary(lm(data=hwtest, vote_pct~growth))
0.6674*1.1+49.7551
sy = yi - hwtest$predicted
lenght(sy)
length(sy)
sy ^2
ssqy <- sy^2
td <- sum(ssqy)
sqrt(td/23)
getwd()
list.files(pattern = ".csv")
2.03/(0.938*sqrt(31))
qf(0.95,1,30)
5.969^2
knitr::opts_chunk$set(echo = TRUE)
college <- read_csv("College.csv", header = T)
?read_csv
#-------------------------
#install.packages("ISLR2")
#-------------------------
library(ISLR2)
library(readr)
college <- read_csv("College.csv", header = T)
?readr::read_csv
college <- read_csv("College.csv", col_names = T)
rm(list = ls())
college <- read_csv("College.csv", col_names = T)
dim(college)
rownames(college)
colnames(college)
View(college)
rownames(college) <- college[,1]
row.names(college) <- college[,1]
?read.csv
college <- read.csv("College.csv", header = T)
rownames(college) <- college[,1]
college <- college[,-1]
View(college)
dim(college)
View(college)
View(college)
#-------------------------
#install.packages("ISLR2")
#-------------------------
library(ISLR2)
library(dplyr)
college %>%
plot(Outstate, Private)
plot(college$Outstate, college$Private)
summary(college)
pairs(college[,1:10])
plot(college$Outstate, college$Private)
plot(college$Outstate, college$Private)
summary(college)
college <- as.factor(college)
pairs(college[,1:10])
sum(is.na(college))
View(college)
?read.csv
college <- read.csv("College.csv", header = T, stringsAsFactors = T)
summary(college)
college <- read.csv("College.csv", header = T, stringsAsFactors = T)
rownames(college) <- college[,1]
college <- college[,-1]
View(college)
summary(college)
pairs(college[,1:10])
ls()
list.files(pattern=".csv")
?read.csv
auto.df <- read.csv("Auto.csv", header = T)
dim(auto.df)
auto.df <- read.csv("Auto.csv", header = T)
auto.df <- na.omit(auto.df)
dim(auto.df)
auto.df <- read.csv("Auto.csv", header = T)
#auto.df <- na.omit(auto.df)
sum(is.na(auto.df))
auto.df <- read.csv("Auto.csv", header = T)
ifelse(sum(is.na(auto.df))!=0, na.omit(auto.df), "No NAs")
#auto.df <- na.omit(auto.df)
auto.df <- read.csv("Auto.csv", header = T)
ifelse(sum(is.na(auto.df))==0, na.omit(auto.df), "No NAs")
#auto.df <- na.omit(auto.df)
auto.df <- read.csv("Auto.csv", header = T)
ifelse(sum(is.na(auto.df))!=0, "There are NAs in the dataframe.", "No NAs")
#auto.df <- na.omit(auto.df) #use if there are NAs
View(auto)
View(auto.df)
names(auto.df)
summary(auto.df)
class(auto.df$horsepower)
ls()
summary(auto.df)
hey <- auto.df$horsepower[1]
hey
hey + 10
tinytex::install_tinytex()
?Boston
head(Boston)
summary(Boston)
pairs(Boston)
pairs(Boston, pch = 20)
college <- read.csv("College.csv", header = T)
rownames(college) <- college[,1]
college <- college[,-1]
#View(college)
rownames(college) <- college[,1]
college <- read.csv("College.csv", header = T)
rownames(college) <- college[,1]
college <- college[,-1]
summary(college)
college <- read.csv("College.csv", header = T, stringsAsFactors = T)
rownames(college) <- college[,1]
college <- college[,-1]
summary(college)
pairs(college[,1:10])
plot(college$Private, college$Outstate)
plot(college$Private, college$Outstate, xlab="Private Status", ylab="Outstate Tuition($)",
main = "College Private Status vs Out-of-State Tuition")
Elite <- rep("No", nrow(college))
Elite[college$Top10perc>50] <- "Yes"
Elite <- as.factor(Elite)
college$Elite <- Elite
View(college)
Elite <- rep("No", nrow(college))
Elite[college$Top10perc>50] <- "Yes"
Elite <- as.factor(Elite)
college$Elite <- Elite
summary(Elite)
plot(college$Elite, college$Outstate, xlab="Elite Status", ylab="Outstate Tuition ($)",
main="College Elite Status vs Out-of-State Tuition")
auto.df <- read.csv("Auto.csv", header = T)
ifelse(sum(is.na(auto.df))!=0, "Dataframe contains NAs.", "No NAs found.")
#auto.df <- na.omit(auto.df) #use if there are NAs
rm(list = ls())
college <- read.csv("College.csv", header = T, stringsAsFactors = T)
rownames(college) <- college[,1]
college <- college[,-1]
head(college)
rownames(college) <- college[,1]
college <- read.csv("College.csv", header = T, stringsAsFactors = T)
rownames(college) <- college[,1]
college <- college[,-1]
head(college,3)
summary(college)
pairs(college[,1:10])
plot(college$Private, college$Outstate, xlab="Private Status", ylab="Outstate Tuition ($)",
main = "College Private Status vs Out-of-State Tuition")
Elite <- rep("No", nrow(college))
Elite[college$Top10perc>50] <- "Yes"
Elite <- as.factor(Elite)
college$Elite <- Elite
summary(Elite)
plot(college$Elite, college$Outstate, xlab="Elite Status", ylab="Outstate Tuition ($)",
main="College Elite Status vs Out-of-State Tuition")
?hist
?histogram
??histogram
par(mfrow = c(3,2))
hist(college$Accept, breaks = 7)
hist(college$Accept, breaks = 100)
hist(college$Grad.Rate, breaks = 100)
hist(college$Grad.Rate, breaks = 100)
hist(college$perc.alumni, breaks = 100)
hist(college$perc.alumni, breaks = 100)
par(mfrow = c(3,2))
hist(college$Accept, breaks = 14)
hist(college$Accept, breaks = 100)
hist(college$Grad.Rate, breaks = 14)
hist(college$Grad.Rate, breaks = 100)
hist(college$perc.alumni, breaks = 14)
hist(college$perc.alumni, breaks = 100)
par(mfrow = c(3,2))
hist(college$Accept, breaks = 14)
hist(college$Accept, breaks = 100)
hist(college$Grad.Rate, breaks = 25)
hist(college$Grad.Rate, breaks = 80)
hist(college$perc.alumni, breaks = 7)
hist(college$perc.alumni, breaks = 90)
auto.df <- read.csv("Auto.csv", header = T)
ifelse(sum(is.na(auto.df))!=0, "Dataframe contains NAs.", "No NAs found.")
#auto.df <- na.omit(auto.df) #use if there are NAs
?read.csv
View(Auto)
colnames(Auto)[1]
for(i in c(1:7)){
paste("Range of ", colnames(Auto)[i], ": ", range(Auto[,i]))
}
for(i in c(1:7)){
print("Range of ", colnames(Auto)[i], ": ", range(Auto[,i]))
}
for(i in 1:7){
print("Range of ", colnames(Auto)[i], ": ", range(Auto[,i]))
}
for(i in 1:7){
paste("Range of ", colnames(Auto)[i], ": ", range(Auto[,i]))
}
for(i in 1:7){
paste(i)
#paste("Range of ", colnames(Auto)[i], ": ", range(Auto[,i]))
}
for(i in 1:7){
paste(i)
#paste("Range of ", colnames(Auto)[i], ": ", range(Auto[,i]))
}
paste("Hello")
for(i in 1:7){
cat("Range of ", colnames(Auto)[i], ": ", range(Auto[,i]))
}
for(i in 1:7){
cat("Range of ", colnames(Auto)[i], ": ", range(Auto[,i]), "\n")
}
dim(Auto)
?ranfe
?range
?diffrange
for(i in 1:7){
cat("Range of ", colnames(Auto)[i], ":", range(Auto[,i]), "\n")
}
for(i in 1:7){
cat("Range of", colnames(Auto)[i], ":", range(Auto[,i]), "\n")
}
mean(Auto$horsepower)
summary(Auto$horsepower)
summary(Auto)
subset.autoDF <- auto.df[-c(10:85),]
summary(subset.autoDF)
dim(Boston)
#-------------------------
#install.packages("ISLR2")
#-------------------------
library(ISLR2)
dim(Boston)
diff(range(Auto$horsepower))
summary(Auto$horsepower)
230-46
for(i in 1:7){
temp.range <- range(Auto[,i])
cat("Range of", colnames(Auto)[i], ":", temp.range, "<=>", diff(temp.range), "\n")
}
pairs(Boston, pch=20)
?pairs
pairs(Boston, pch=20,lower.panel = F)
for(i in 1:7){
cat(colnames(Auto)[i], "mean/sDev:", mean(Auto[,i]),"/",sd(Auto[,i]),"\n")
}
colnames(college)
for(i in 1:7){
temp.range <- range(Auto[,i])
cat(i,")\n")
cat("Range of", colnames(Auto)[i], ":", temp.range, "<=>", diff(temp.range), "\n")
cat(colnames(Auto)[i], "mean/sDev:", mean(Auto[,i]),"/",sd(Auto[,i]),"\n")
}
subset.autoDF <- auto.df[-c(10:85),]
summary(subset.autoDF)
for(i in 1:7){
temp.range <- range(Auto[,i])
cat(i,")\n")
cat(colnames(Auto)[i], "range:", temp.range, "<=>", diff(temp.range), "\n")
cat(colnames(Auto)[i], "mean/sDev:", mean(Auto[,i]),"/",sd(Auto[,i]),"\n")
}
for(i in 1:7){
temp.range <- range(subset.autoDF[,i])
temp.col <- subset.autoDF[,i]
cat(i,")\n")
cat(colnames(subset.autoDF)[i], "range:", temp.range, "<=>", diff(temp.range), "\n")
cat(colnames(subset.autoDF)[i], "mean/sDev:", mean(temp.col),"/",sd(temp.col),"\n")
}
for(i in 1:7){
temp.range <- range(subset.autoDF[,i])
temp.col <- subset.autoDF[,i]
cat(i,")\n")
cat(colnames(subset.autoDF)[i], "range:", temp.range, "<=>", diff(temp.range), "\n")
cat(colnames(subset.autoDF)[i], "mean/sDev:", mean(temp.col),"/",sd(temp.col),"\n")
}
subset.autoDF <- auto.df[-c(10:85),]
summary(subset.autoDF)
for(i in 1:7){
temp.range <- range(subset.autoDF[,i])
temp.col <- subset.autoDF[,i]
cat(i,")\n")
cat(colnames(subset.autoDF)[i], "range:", temp.range, "<=>", diff(temp.range), "\n")
cat(colnames(subset.autoDF)[i], "mean/sDev:", mean(temp.col),"/",sd(temp.col),"\n")
}
for(i in 1:7){
temp.range <- range(subset.autoDF[,i])
cat(i,")\n")
cat(colnames(subset.autoDF)[i], "range:", temp.range, "<=>", diff(temp.range), "\n")
cat(colnames(subset.autoDF)[i], "mean/sDev:", mean(subset.autoDF[,i]),"/",sd(subset.autoDF[,i]),"\n")
}
for(i in 1:7){
temp.range <- range(subset.autoDF[,i])
cat(i,")\n")
cat(colnames(subset.autoDF)[i], "range:", temp.range, "<=>", diff(temp.range), "\n")
cat(colnames(subset.autoDF)[i], "mean/sDev:", mean(subset.autoDF[,i]),"/",sd(subset.autoDF[,i]),"\n")
}
dim(subset.autoDF)
dim(Auto)
392-321
subset.autoDF <- auto.df[-c(10:85),]
summary(subset.autoDF)
dim(subset.autoDF)
View(subset.autoDF)
View(auto.df)
auto.df <- read.csv("Auto.csv", header = T)
#auto.df <- na.omit(auto) <= use if there are NAs
ifelse(sum(is.na(auto.df))!=0, "Dataframe contains NAs.", "No NAs found.")
auto.df <- read.csv("Auto.csv", header = T)
#auto.df <- na.omit(auto) <= use if there are NAs
#ifelse(sum(is.na(auto.df))!=0, "Dataframe contains NAs.", "No NAs found.")
View(auto.df)
subset.autoDF <- auto.df[-c(10:85),]
summary(subset.autoDF)
for(i in 1:7){
temp.range <- range(subset.autoDF[,i])
cat(i,")\n")
cat(colnames(subset.autoDF)[i], "range:", temp.range, "<=>", diff(temp.range), "\n")
cat(colnames(subset.autoDF)[i], "mean/sDev:", mean(subset.autoDF[,i]),"/",sd(subset.autoDF[,i]),"\n")
}
for(i in 1:7){
temp.range <- range(Auto[,i])
cat("Range of", colnames(Auto)[i], ":", temp.range, "<=>", diff(temp.range), "\n")
}
for(i in 1:7){
cat(colnames(Auto)[i], "mean/sDev:", mean(Auto[,i]),"/",sd(Auto[,i]),"\n")
}
for(i in 1:7){
cat(colnames(auto.df)[i], "mean/sDev:", mean(auto.df[,i]),"/",sd(auto.df[,i]),"\n")
}
auto.df <- read.csv("Auto.csv", header = T, na.string="?")
#auto.df <- na.omit(auto) <= use if there are NAs
ifelse(sum(is.na(auto.df))!=0, "Dataframe contains NAs.", "No NAs found.")
auto.df <- read.csv("Auto.csv", header = T, na.string="?")
auto.df <- na.omit(auto)
auto.df <- read.csv("Auto.csv", header = T, na.string="?")
auto.df <- na.omit(auto.df)
auto.df <- read.csv("Auto.csv", header = T, na.string="?")
auto.df <- na.omit(auto.df)
sum(is.na(auto.df))
auto.df <- read.csv("Auto.csv", header = T, na.string="?")
auto.df <- na.omit(auto.df)
dim(auto.df)
summary(auto.df)
class(auto.df$origin)
for(i in 1:7){
temp.range <- range(auto.df[,i])
cat("Range of", colnames(auto.df)[i], ":", temp.range, "<=>", diff(temp.range), "\n")
}
for(i in 1:7){
cat(colnames(auto.df)[i], "mean/sDev:", mean(auto.df[,i]),"/",sd(auto.df[,i]),"\n")
}
subset.autoDF <- auto.df[-c(10:85),]
summary(subset.autoDF)
for(i in 1:7){
temp.range <- range(subset.autoDF[,i])
cat(i,")\n")
cat(colnames(subset.autoDF)[i], "range:", temp.range, "<=>", diff(temp.range), "\n")
cat(colnames(subset.autoDF)[i], "mean/sDev:", mean(subset.autoDF[,i]),"/",sd(subset.autoDF[,i]),"\n")
}
par(mfrow = c(3,2))
hist(college$Accept, breaks = 14)
hist(college$Grad.Rate, breaks = 100)
hist(college$perc.alumni, breaks = 25)
hist(college$Outstate, breaks = 80)
par(mfrow = c(2,2))
hist(college$Accept, breaks = 14)
hist(college$Grad.Rate, breaks = 100)
hist(college$perc.alumni, breaks = 25)
hist(college$Outstate, breaks = 80)
pairs(auto.df)
pairs(auto.df[,1:7])
attach(auto.df)
plot(as.factor(origin), mpg)
attach(auto.df)
plot(as.factor(origin), mpg, xlab="Origin", ylab = "mpg")
pairs(auto.df[,1:7])
attach(auto.df)
plot(as.factor(origin), mpg, xlab="Origin", ylab = "mpg")
attach(auto.df)
plot(as.factor(origin), mpg, xlab="Origin", ylab = "mpg")
pairs(auto.df[,1:7])
pairs(Boston, pch=20)
pairs(Boston, pch=20)
?Boston
attach(Boston)
summary(crim, tax, ptratio)
attach(Boston)
summary(c(crim, tax, ptratio))
summary(Boston["crim", "tax", "ptratio"])
cols <- c("crim", "tax", "ptratio")
summary(Boston[cols])
cols <- c("crim", "tax", "ptratio")
range(Boston[cols])
class(Boston$chas)
num.Bounds <- sum(Boston$chas == 1)
paste(num.Bounds, " bound the Charles River.")
num.Bounds <- sum(Boston$chas == 1)
paste(num.Bounds, "Boston suburbs bound the Charles River.")
med.rat <- median(Boston$ptratio)
paste("The median pupil-teacher ratio is:",med.rat)
seven.rooms <- sum(Boston$rm > 7)
eight.rooms <- sum(Boston$rm > 8)
paste(seven.rooms, "average more than 7 rooms per dwelling.", eight.rooms, "average more than 8 rooms per dwelling.")
which(Boston$medv == min(Boston$medv))
low.med.val <- which(Boston$medv == min(Boston$medv))
Boston[c(399,406),]
Boston[c(399,406),]
min(Boston)
Boston[c(399,406),]
apply(Boston, 1, min)
Boston[c(399,406),]
apply(Boston, 2, min)
rbind(Boston[c(399,406),], apply(Boston, 2, min))
compare <- rbind(Boston[c(399,406),], apply(Boston, 2, min))
row.names(compare) <- c("399", "406", "minVal")
compare <- rbind(Boston[c(399,406),], apply(Boston, 2, min))
row.names(compare) <- c("399", "406", "minVal")
compare
more.eight <- which(Boston$rm > 7)
Boston[more.eight,]
more.eight <- which(Boston$rm > 8)
Boston[more.eight,]
pairs(Boston, pch=20)
cols <- c("crim", "tax", "ptratio")
range(Boston[cols])
cols <- c("crim", "tax", "ptratio")
summary(Boston[cols])
cols <- c("crim", "tax", "ptratio")
max(Boston[cols])
cols <- c("crim", "tax", "ptratio")
apply((Boston[cols], 2, max)
cols <- c("crim", "tax", "ptratio")
apply(Boston[cols], 2, max)
cols <- c("crim", "tax", "ptratio")
apply(Boston[cols], 2, max) - apply(Boston[cols],2,min)
par(mfrow = c(3,1))
hist(Boston$crim, breaks = 25)
hist(Boston$tax, breaks = 25)
hist(Boston$ptratio, breaks = 25)
rm(list = ls())
ls()
